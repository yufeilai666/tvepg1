name: 2(弃用) Download EPG

on:
  # schedule:
      # 每天0点、4点、8点、12点、16点、20点执行一次
  #    - cron: '0 0,4,8,12,16,20 * * *'
  workflow_dispatch:

jobs:
  Download_EPG:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      SECRET_JSON: ${{ secrets.JSON_FILE }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install jq (for parsing JSON)
        run: sudo apt-get install -y jq

      - name: Download files from secret JSON
        run: |
          # 直接从环境变量解析JSON并下载文件
          echo "$SECRET_JSON" | jq -r 'to_entries[] | "\(.key) \(.value)"' | while read -r filename url; do
            echo "Downloading $filename"
            wget -O "$filename" "$url" --retry-connrefused --waitretry=5 --timeout=30 >/dev/null 2>&1 || echo "$filename 下载失败，跳过"
          done

          # 将文件名列表写入 GITHUB_ENV，供后续步骤使用
          echo "$SECRET_JSON" | jq -r 'keys[]' | while read -r filename; do
            echo "FILENAME_$filename=$filename" >> $GITHUB_ENV
          done

      - name: Commit and push changes
        run: |
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"

          # 收集需要添加的文件
          files_to_add=""
          while IFS= read -r var; do
            if [ -f "$var" ]; then
              files_to_add="$files_to_add $var"
            fi
          done < <(env | grep 'FILENAME_' | cut -d '=' -f 2)

          if [ -n "$files_to_add" ]; then
            git add $files_to_add
            # 检查是否有变更
            if ! git diff-index --quiet HEAD; then
              now_time=$(TZ='Asia/Shanghai' date '+%Y-%m-%d %H:%M:%S')
              git commit -m "自动更新EPG文件：$now_time"
              # 先拉取最新更改并 rebase
              git pull --rebase origin main
              # 推送
              git push origin main
            else
              echo "文件内容无变化，无需提交"
            fi
          else
            echo "没有找到可提交的文件"
          fi
