name: 7(原7，弃用) output epgziyong.xml

on:
  #schedule:
    # 每天0点40分、4点40分、8点40分、12点40分、16点40分、20点40分执行一次
  #  - cron: '40 0,4,8,12,16,20 * * *'
  workflow_dispatch:

jobs:
  generate_and_upload:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      # 第一步：检出当前仓库（主分支，用于获取输入文件）
      - name: Checkout main branch for input files
        uses: actions/checkout@v4
        with:
          ref: main  # 明确指定主分支

      # 第二步：检出epg_scripts分支获取脚本
      - name: Checkout epg_scripts branch for scripts
        uses: actions/checkout@v4
        with:
          ref: epg_scripts  # 指定epg_scripts分支
          path: epg_scripts  # 将脚本检出到单独目录

      # 第三步：创建临时工作目录并复制所需文件
      - name: Prepare working directory
        run: |
          # 创建临时工作目录
          mkdir -p temp_workspace
          # 复制主分支的输入文件到工作目录
          cp *.xml *.gz temp_workspace/ 2>/dev/null || true
          # 复制脚本文件到工作目录
          cp epg_scripts/epgziyong.php temp_workspace/
          echo "工作目录准备完成"

      # 第四步：设置 PHP 环境
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: xmlreader, xmlwriter, zlib  # 启用EPG处理所需的扩展

      # 第五步：在临时工作目录中生成文件
      - name: Run epgziyong.php in temp workspace
        run: php epgziyong.php
        working-directory: temp_workspace  # 在临时目录中运行脚本

      # 第六步：检出目标仓库
      - name: Checkout target repo
        uses: actions/checkout@v4
        with:
          repository: yufeilai666/tvepg
          token: ${{ secrets.GITHUB_TOKEN }}
          path: tvepg

      # 第七步：强制覆盖文件（关键修复）
      - name: Overwrite target file
        run: |
          # 确保覆盖前文件存在
          ls -l temp_workspace/epgziyong.xml
          # 强制复制并保留权限
          cp -f temp_workspace/epgziyong.xml tvepg/epgziyong.xml
          # 验证覆盖结果
          ls -l tvepg/epgziyong.xml

      # 第八步：提交变更（优化路径处理）
      - name: Commit and push
        working-directory: tvepg  # 使用官方推荐方式指定路径
        run: |
          # 显式检查文件状态
          git status
          #git diff
          git diff --stat

          # 配置 Git 身份
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # 添加所有变化（适应文件名大小写变化）
          git add --all

          # 检测是否有可提交内容
          if [ -n "$(git status --porcelain)" ]; then
            now_time=$(TZ='Asia/Shanghai' date '+%Y-%m-%d %H:%M:%S')
            git commit -m "epgziyong.xml自动更新时间：$now_time"
            git push origin main
          else
            echo "无实际文件变更，跳过提交"
          fi

      # 第九步：清理临时工作目录
      - name: Cleanup temporary workspace
        run: |
          rm -rf temp_workspace
          echo "临时工作目录已清理"
