name: Update Logo List

on:
  push:
    paths:
      - 'logo/**'
    branches: [ main ]
  workflow_dispatch:  # 允许手动触发
    inputs:
      sort_method:
        description: '排序方法 (name, ascii, size, time)'
        required: false
        default: 'name'
  # schedule:
  #  - cron: '0 1 * * 0'  # 每周日午夜1点运行一次

jobs:
  update-logo-list:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
    - name: Checkout main branch
      uses: actions/checkout@v3
      with:
        ref: main
        # 使用浅克隆，只获取最新的提交
        fetch-depth: 1

    - name: Checkout epg_scripts branch for script
      uses: actions/checkout@v3
      with:
        ref: epg_scripts
        path: epg_scripts
        # 使用浅克隆，只获取最新的提交
        fetch-depth: 1

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install pypinyin for Chinese sorting
      run: pip install pypinyin

    - name: Copy and run script to generate logo list
      run: |
        # 创建临时目录并复制脚本
        mkdir -p /tmp/script
        cp epg_scripts/update_logo_list.py /tmp/script/
        
        # 运行脚本
        cd /tmp/script
        python update_logo_list.py
      env:
        GITHUB_ACTOR: ${{ github.actor }}
        GITHUB_REPOSITORY: ${{ github.repository }}
        GITHUB_REF: ${{ github.ref }}
        SORT_METHOD: ${{ github.event.inputs.sort_method || 'name' }}
        LOGO_DIR: ${{ github.workspace }}/logo  # 传递logo目录的绝对路径

    - name: Checkout logo_info branch or create if not exists
      run: |
        # 检查logo_info分支是否存在
        if git ls-remote --exit-code --heads origin logo_info; then
          echo "logo_info分支已存在，切换到该分支"
          git fetch origin logo_info
          git checkout logo_info
        else
          echo "创建新的logo_info孤立分支"
          # 创建一个空的孤立分支
          git checkout --orphan logo_info
          # 清空工作区
          git rm -rf --quiet .
        fi

    - name: Update README.md and logo.json in logo_info branch
      run: |
        # 从临时位置复制生成的README.md和logo.json
        cp /tmp/logo_list/README.md ./
        cp /tmp/logo_list/logo.json ./
        echo "README.md 和 logo.json 复制成功"

    - name: Commit and push to logo_info branch
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add README.md logo.json
        
        # 检查是否有更改
        if git diff --staged --quiet; then
          echo "没有更改需要提交"
        else
          now_time=$(TZ='Asia/Shanghai' date '+%Y-%m-%d %H:%M:%S')
          git commit -m "Update logo list and JSON [skip ci]: $now_time"
          git push origin logo_info
        fi

    - name: Clean up
      run: |
        # 清理临时文件
        rm -rf /tmp/logo_list
        rm -rf /tmp/script
        echo "清理临时文件完成"
        # 返回主分支
        git checkout main
